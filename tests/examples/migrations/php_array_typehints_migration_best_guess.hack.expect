/*
 *  Copyright (c) 2017-present, Facebook, Inc.
 *  All rights reserved.
 *
 *  This source code is licensed under the MIT license found in the
 *  LICENSE file in the root directory of this source tree.
 *
 */

// anything except params and return types is ignored
type V = array<int>;
type D = array<string, bool>;

function foo(
  <<__Soft>> varray<int> $a,
  <<__Soft>> darray<string, bool> $b,
  <<__Soft>> varray<float> $already_soft,
  <<Foo, __Soft>> varray<int> $foo,
  <<Foo, Bar, __Soft>> varray<int> $foo_bar,
  <<
    Foo,
    __Soft
  >> varray<int> $foo2,
  <<
    Foo,
    Bar,
    __Soft
  >> varray<int> $foo_bar2,
  <<
    Foo,
    Bar,
    __Soft,
  >> varray<int> $foo_bar3,
  /* 1 */ <<__Soft>> varray<bool> /* 2 */ $x, // 3
  /* 1 */ <<__Soft>> /* 2 */ varray<bool> /* 3 */ $y, // 4
  /* 1 */ << /* 2 */ Foo, /* 3 */ Bar, /* 4 */ __Soft >> /* 5 */ varray<int> $z, // 5
  /* 1 */ << // 2
    /* 3 */ Foo, // 4
    /* 5 */ Bar, // 6
    __Soft,
  /* 7 */ >> // 8
  /* 9 */ darray<int, varray<darray<string, bool>>> /* 10 */ $analbumcover, // 11
): <<__Soft>> darray<string, varray<bool>> {
  $lambda =
    (<<__Soft>> varray<int> $a, <<__Soft>> darray<string, bool> $b): <<__Soft>> varray<float> ==>
    varray[42.0];
  $soft_lambda = (): <<__Soft>> varray<int> ==> {
    echo 'hi';
    return varray[1, 1, 2, 3, 5, 8, 14];
  };
  return darray[];
}

function already_soft(): <<__Soft>> varray<int> {
  return varray[];
}

function untyped($foo) {}

final class Foo implements HH\ParameterAttribute {};
final class Bar implements HH\ParameterAttribute {};
