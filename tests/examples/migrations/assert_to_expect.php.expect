<?hh //strict

use namespace hi;
use function hello;
use function Facebook\FBExpect\expect;
use type that;

class Test {

  public function testMethod(): void {
    expect($a)->toBeSame($a);
    expect($b)->toBePHPEqual($a);
    expect($b)->toBePHPEqual($a, 'msg');
    expect($b)->toEqualWithDelta($a, $delta, 'msg');
    expect($obj)->toBeNull();
    expect('foo')->toBeTrue('msg');
    expect(vec[1, 2, 3])->toBeFalse();
    expect($obj)->toBeInstanceOf(HackTestCase::class, 'Not an instance of HackTestCase!');
    expect(2)->toBeGreaterThanOrEqualTo(1, '2 > 1');
    expect($a)->toBeSame($a);
    expect($b)->toBePHPEqual($a);
    expect($b)->toBePHPEqual($a, 'msg');
    expect($b)->toEqualWithDelta($a, $delta, 'msg');
    expect($obj)->toBeNull();
    expect('foo')->toBeTrue('msg');
    expect(vec[1, 2, 3])->toBeFalse();
    expect($obj)->toBeInstanceOf(HackTestCase::class, 'Not an instance of HackTestCase!');
    expect(2)->toBeGreaterThanOrEqualTo(1, '2 > 1');
    expect($a)->toBeSame($a);
    expect($b)->toBePHPEqual($a);
    expect($b)->toBePHPEqual($a, 'msg');
    expect($b)->toEqualWithDelta($a, $delta, 'msg');
    expect($obj)->toBeNull();
    expect('foo')->toBeTrue('msg');
    expect(vec[1, 2, 3])->toBeFalse();
    expect($obj)->toBeInstanceOf(HackTestCase::class, 'Not an instance of HackTestCase!');
    expect(2)->toBeGreaterThanOrEqualTo(1, '2 > 1');
    $this->foo->assertType('not a PHPUnit Assertion');
  }
}
